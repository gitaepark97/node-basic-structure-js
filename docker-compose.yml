version: "3"
services:
  rdbms:
    container_name: rdbms
    image: mariadb:10
    restart: always
    ports:
      - 3307:3306
    volumes:
      - ./docker/rdbms/config:/etc/mysql/conf.d
      - rdbms:/var/lib/mysql
      - ./docker/rdbms/initdb:/docker-entrypoint-initdb.d
    env_file:
      - .env
  nosql:
    container_name: nosql
    image: cassandra:3
    restart: always
    ports:
      - 9043:9042
    volumes:
      - nosql:/var/lib/cassandra
    environment:
      - CASSANDRA_CLUSTER_NAME=clusters
  memorydb:
    container_name: memorydb
    image: redis:6
    restart: always
    ports:
      - 6380:6379
    command: redis-server --requirepass password
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.0.1
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: nc -z localhost 2181 || exit -1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.0.1
    restart: always
    ports:
      - 9093:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      zookeeper:
        condition: service_healthy
  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: ./api
    depends_on:
      - rdbms
      - nosql
      - kafka
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/api/node_modules
  socket:
    container_name: socket
    build:
      dockerfile: Dockerfile
      context: ./socket
    depends_on:
      - memorydb
      - kafka
      - api
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/socket/node_modules
  proxy:
    container_name: proxy
    build:
      dockerfile: Dockerfile
      context: ./docker/proxy
    ports:
      - 80:80
    depends_on:
      - socket
volumes:
  rdbms:
  nosql:
